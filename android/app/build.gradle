apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-parcelize"

apply plugin: 'com.google.firebase.crashlytics'

apply from: "../versions.gradle"

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
def debugKeystorePath = 'key/debug.jks'
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    keystoreProperties['storeFile'] = debugKeystorePath
}

// Build archive name
def applicationName = "YachtSharing"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.gravitygroup.avangard"
        minSdkVersion 23
        targetSdkVersion 30
        versionName "${appVersionName}.${appBuildNumber}"
        versionCode appVersionCode

        setProperty("archivesBaseName", applicationName + "-v" + versionCode + "(" + versionName + ")-" + getDate())
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            if (keystorePropertiesFile.exists()) {
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
        debug {
            storeFile file(debugKeystorePath)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "api"
    productFlavors {
        client {
            applicationIdSuffix ".client"
            buildConfigField "String", "BASE_URL", '"http://95.31.252.113:1200/remoute/hs/mobagent/"'
            buildConfigField "String", "APP_TYPE",'"client"'
            buildConfigField "String", "YACHT_SHARE_URL", '"https://yaht-sharing.qualitylive.su/api"'
            buildConfigField "String", "MAP_KEY", '"fd8ebbed-6b24-4fe5-8c2f-c8d8ddaf1dd1"'
            buildConfigField "String", "GEOCODE_MAP_KEY", '"7d49b412-7715-4186-9491-a20e5f94eecd"'
        }

        captain {
            applicationIdSuffix ".captain"
            buildConfigField "String", "BASE_URL", '"https://casher-resource.herokuapp.com/vanguard/"'
            buildConfigField "String", "APP_TYPE",'"captain"'
            buildConfigField "String", "YACHT_SHARE_URL", '"https://yaht-sharing.qualitylive.su/api"'
            buildConfigField "String", "MAP_KEY", '"fd8ebbed-6b24-4fe5-8c2f-c8d8ddaf1dd1"'
            buildConfigField "String", "GEOCODE_MAP_KEY", '"e7a8a692-e8bc-4bb7-a337-3e3c693e588d"'
        }

        prod {
            buildConfigField "String", "BASE_URL", '"http://95.31.252.113:1200/remoute/hs/mobagent/"'
            buildConfigField "String", "APP_TYPE",'"prod"'
            buildConfigField "String", "YACHT_SHARE_URL", '"https://yaht-sharing.qualitylive.su/api"'
            buildConfigField "String", "MAP_KEY", '"fd8ebbed-6b24-4fe5-8c2f-c8d8ddaf1dd1"'
            buildConfigField "String", "GEOCODE_MAP_KEY", '"e7a8a692-e8bc-4bb7-a337-3e3c693e588d"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }

    /*splits {
        abi {
            enable true
            reset()

            include 'arm64-v8a', 'armeabi-v7a'
            universalApk true
        }
    }*/
}

dependencies {
//    implementation project(':chat')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Material
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation "androidx.preference:preference-ktx:$pref_ktx_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment:$navigation_version"
    implementation "androidx.navigation:navigation-ui:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retofit_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_adapters_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Result api
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragments_ktx_version"

    // Number mask for edittext
    implementation ('com.alimuzaffar.lib:pinentryedittext:2.0.6') {
        // Exclude is only needed if you already have
        // androidx.appcompat as a dependency in your app.
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }

    // Log
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Security https://developer.android.com/jetpack/androidx/releases/security
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    // Adapter Delegates https://github.com/sockeqwe/AdapterDelegates
    implementation "com.hannesdorfmann:adapterdelegates4:$adapter_delegates_version"
    implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:$adapter_delegates_version"

    // EasyPermissions https://github.com/googlesamples/easypermissions
    implementation "pub.devrel:easypermissions:$easy_permission_version"

    // Location
    implementation "com.google.android.gms:play-services-location:$play_service_location_version"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Image picker
    implementation "com.github.esafirm.android-image-picker:imagepicker:$image_picker_version"

    // Input mask
    implementation "com.redmadrobot:input-mask-android:$input_mask_version"

    // Week view
    implementation 'com.github.AndroidDeveloperLB:Android-Week-View:2.3.0.1'
    implementation 'com.linkedin.android.tachyon:tachyon:1.0.2'

    implementation "com.google.android:flexbox:$flexbox"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_—Åanary_version"

    // Map
    implementation 'com.yandex.android:mapkit:3.5.0'

    // Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.4.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.4.0"

    // Locale
    implementation "com.akexorcist:localization:$localization_version"

    implementation ('io.socket:socket.io-client:1.0.1') {
        exclude group: 'org.json', module: 'json'
    }

    implementation 'com.github.andrefrsousa:SuperBottomSheet:2.0.0'
}

/**
 * Returns current formatted date
 */
static def getDate() {
    return new Date().format("[yyyy.MM.dd_HH-mm]")
}
